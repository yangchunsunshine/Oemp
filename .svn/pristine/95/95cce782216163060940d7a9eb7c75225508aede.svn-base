package com.wb.component.computer.sendMessageManager.service.imp;

import java.util.List;
import java.util.Map;

import org.hibernate.Criteria;
import org.hibernate.Query;
import org.springframework.stereotype.Service;

import com.wb.component.computer.sendMessageManager.service.ISendMessageService;
import com.wb.framework.commonDao.BaseDao;
import com.wb.framework.commonUtil.PageUtil;
import com.wb.framework.commonUtil.PageUtil.PageInfo;

@Service
public class SendMessageService extends BaseDao implements ISendMessageService {

	@Override
	public PageUtil getAllOrganization(Integer id, PageInfo info) {
		// TODO Auto-generated method stub
		StringBuffer sql=new StringBuffer();
		sql.append("SELECT  DISTINCT IFNULL(org.ID,");
		sql.append(" '') AS ORGID,");
		sql.append(" IFNULL(cus.ID,");
		sql.append(" '') AS CUSID,");
		sql.append(" IFNULL(org. NAME,");
		sql.append(" '') AS ORGNAME,");
		sql.append(" cus.androidDeviceToken,");
		sql.append("  cus.iosDeviceToken ,cus.mobile");
		sql.append("   FROM mnt_customContract con LEFT JOIN ");
		sql.append("   mnt_customInfo cus ");
		sql.append("   ON con.cusId = cus.id ");
		sql.append("   LEFT JOIN biz_organization org   ON  org.mntCustomId = cus.id  ");
		sql.append("   LEFT JOIN biz_member mem ON org.ownerId = mem.ID  ");
		sql.append("    LEFT JOIN mnt_departmentInfo dep ON mem.departmentId = dep.id  ");
		sql.append("    LEFT JOIN mnt_mngandusers mng ON mem.ID = mng.userMemberId ");
		sql.append("     WHERE mng.state = 1 AND org.Enable = 1  and mng.mntMemberId="+id);
		sql.append(" GROUP BY org.id,org.seqCode,con.accNo");
		return this.findPageBySqlQuery(sql.toString(), info.getPage(), info.getRows());
	}

	@Override
	public int getNumCount(Integer id) {
		int num=0;
		StringBuffer sql=new  StringBuffer();
		sql.append("SELECT COUNT(*) as num FROM ( ");
		sql.append("SELECT  DISTINCT IFNULL(org.ID,");
		sql.append(" '') AS ORGID,");
		sql.append(" IFNULL(cus.ID,");
		sql.append(" '') AS CUSID,");
		sql.append(" IFNULL(org. NAME,");
		sql.append(" '') AS ORGNAME,");
		sql.append(" cus.androidDeviceToken,");
		sql.append("  cus.iosDeviceToken ,cus.mobile");
		sql.append("   FROM mnt_customContract con LEFT JOIN ");
		sql.append("   mnt_customInfo cus ");
		sql.append("   ON con.cusId = cus.id ");
		sql.append("   LEFT JOIN biz_organization org   ON  org.mntCustomId = cus.id  ");
		sql.append("   LEFT JOIN biz_member mem ON org.ownerId = mem.ID  ");
		sql.append("    LEFT JOIN mnt_departmentInfo dep ON mem.departmentId = dep.id  ");
		sql.append("    LEFT JOIN mnt_mngandusers mng ON mem.ID = mng.userMemberId ");
		sql.append("     WHERE mng.state = 1 AND org.Enable = 1  and mng.mntMemberId="+id);
		sql.append(" GROUP BY org.id,org.seqCode,con.accNo ) x ");
		Query query = this.getSession().createSQLQuery(sql.toString());
		query.setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP);
        List<Map<String, Object>> list = query.list();
        for (Map<String, Object> map : list)
        {
       	 if(map.get("num")==null){
       		 break;
       	 }
            num = Integer.parseInt(map.get("num").toString());
        }
		return num;
	}

	@Override
	public PageUtil getAllOrganizationByChose(Integer id, PageInfo info,
			String orgName) {
		if(orgName.trim().equals("")){
			StringBuffer sql=new StringBuffer();
			sql.append("SELECT  DISTINCT IFNULL(org.ID,");
			sql.append(" '') AS ORGID,");
			sql.append(" IFNULL(cus.ID,");
			sql.append(" '') AS CUSID,");
			sql.append(" IFNULL(org. NAME,");
			sql.append(" '') AS ORGNAME,");
			sql.append(" cus.androidDeviceToken,");
			sql.append("  cus.iosDeviceToken ,cus.mobile");
			sql.append("   FROM mnt_customContract con LEFT JOIN ");
			sql.append("   mnt_customInfo cus ");
			sql.append("   ON con.cusId = cus.id ");
			sql.append("   LEFT JOIN biz_organization org   ON  org.mntCustomId = cus.id  ");
			sql.append("   LEFT JOIN biz_member mem ON org.ownerId = mem.ID  ");
			sql.append("    LEFT JOIN mnt_departmentInfo dep ON mem.departmentId = dep.id  ");
			sql.append("    LEFT JOIN mnt_mngandusers mng ON mem.ID = mng.userMemberId ");
			sql.append("     WHERE mng.state = 1 AND org.Enable = 1  and mng.mntMemberId="+id);
			sql.append(" GROUP BY org.id,org.seqCode,con.accNo");
			return this.findPageBySqlQuery(sql.toString(), info.getPage(), info.getRows());
		}
		StringBuffer sql=new StringBuffer();
		sql.append(" select * from(");
		sql.append(" SELECT  DISTINCT IFNULL(org.ID,");
		sql.append(" '') AS ORGID,");
		sql.append(" IFNULL(cus.ID,");
		sql.append(" '') AS CUSID,");
		sql.append(" IFNULL(org. NAME,");
		sql.append(" '') AS ORGNAME,");
		sql.append(" cus.androidDeviceToken,");
		sql.append("  cus.iosDeviceToken ,cus.mobile");
		sql.append("   FROM mnt_customContract con LEFT JOIN ");
		sql.append("   mnt_customInfo cus ");
		sql.append("   ON con.cusId = cus.id ");
		sql.append("   LEFT JOIN biz_organization org   ON  org.mntCustomId = cus.id  ");
		sql.append("   LEFT JOIN biz_member mem ON org.ownerId = mem.ID  ");
		sql.append("    LEFT JOIN mnt_departmentInfo dep ON mem.departmentId = dep.id  ");
		sql.append("    LEFT JOIN mnt_mngandusers mng ON mem.ID = mng.userMemberId ");
		sql.append("     WHERE mng.state = 1 AND org.Enable = 1  and mng.mntMemberId="+id);
		sql.append(" GROUP BY org.id,org.seqCode,con.accNo )x where x.ORGNAME like '%"+orgName+"%'");
		return this.findPageBySqlQuery(sql.toString(), info.getPage(), info.getRows());
	}

}
